name: üéµ Deploy Elekr-√Çme Website

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöö Checkout code
      uses: actions/checkout@v4
      
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: |
        npm install
        
    - name: üèóÔ∏è Build React frontend
      run: |
        npm run build
        echo "Build completed. Checking dist folder..."
        ls -la dist/ | head -10
        
    - name: üìÅ Create deployment package
      run: |
        mkdir -p deployment-package
        
        # Copy built frontend files
        cp -r dist/* deployment-package/
        
        # Copy PHP backend
        cp -r api deployment-package/
        
        # Copy database files
        cp -r database deployment-package/
        
        # Copy public assets
        cp -r public deployment-package/
        
        # Copy configuration files
        cp .htaccess deployment-package/
        cp .ovhconfig deployment-package/
        cp index.html deployment-package/
        
        # Create deployment info
        echo "Elekr-√Çme Website Deployment" > deployment-package/DEPLOYMENT_INFO.txt
        echo "Deployed on: $(date)" >> deployment-package/DEPLOYMENT_INFO.txt
        echo "Commit: ${{ github.sha }}" >> deployment-package/DEPLOYMENT_INFO.txt
        echo "Branch: ${{ github.ref_name }}" >> deployment-package/DEPLOYMENT_INFO.txt
        echo "Repository: ${{ github.repository }}" >> deployment-package/DEPLOYMENT_INFO.txt
        
    - name: üìã Verify deployment package
      run: |
        echo "Checking deployment package..."
        ls -la deployment-package/ | head -20
        echo "Package size:"
        du -sh deployment-package/
        
    - name: üîç Verify FTP secrets are set
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Verifying FTP secrets..."
        if [ -z "${{ secrets.FTP_SERVER }}" ]; then
          echo "‚ùå ERROR: FTP_SERVER secret is not set!"
          exit 1
        else
          echo "‚úÖ FTP_SERVER is set (value hidden)"
        fi
        if [ -z "${{ secrets.FTP_USERNAME }}" ]; then
          echo "‚ùå ERROR: FTP_USERNAME secret is not set!"
          exit 1
        else
          echo "‚úÖ FTP_USERNAME is set (value hidden)"
        fi
        if [ -z "${{ secrets.FTP_PASSWORD }}" ]; then
          echo "‚ùå ERROR: FTP_PASSWORD secret is not set!"
          exit 1
        else
          echo "‚úÖ FTP_PASSWORD is set (value hidden)"
        fi
        echo "FTP_SERVER_DIR: ${FTP_SERVER_DIR:-'/' (default)}"
        
    - name: üåê Deploy to FTP
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deployment-package/
        server-dir: ${{ secrets.FTP_SERVER_DIR || '/' }}
        protocol: ftp
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.env*
          **/README.md
          **/package-lock.json
          **/yarn.lock
          **/.DS_Store
          **/Thumbs.db
          **/.vscode/**
          **/.idea/**
          **/coverage/**
          **/test/**
          **/tests/**
          **/*.test.js
          **/*.spec.js
          **/jest.config.js
          **/cypress/**
          **/e2e/**
          **/.nyc_output/**
          **/logs/**
          **/*.log
          **/tmp/**
          **/temp/**
          **/*.tmp
          **/*.bak
          **/*.backup
          **/.local/**
          **/src/**
          **/docs/**
          **/deployment-package/**
          **/test-deployment/**
          **/member-login-deployment/**
          **/elekr-ame-deployment.zip
          **/test-deployment.zip
        log-level: verbose
        dry-run: false
        
    - name: üì§ Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: elekr-ame-deployment
        path: deployment-package/
        retention-days: 7
        
    - name: üéâ Deployment complete
      run: |
        echo "üéµ Elekr-√Çme website deployed successfully!"
        echo "üåê Check your website at: https://www.elektr-ame.com"
